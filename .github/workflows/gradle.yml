# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI CD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  LIGHTSAIL_SSH_KEY: ${{ secrets.LIGHT_SSH }}
  LIGHTSAIL_HOST: ${{ secrets.LIGHT_URL }}
  LIGHTSAIL_USERNAME: ec2-user
  AWS_REGION: ap-northeast-2


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configuration 가져오기
    - name: Conf 복사/생성
      run: touch ./src/main/resources/application.yaml
    - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yaml

    - run: touch ./src/main/resources/profile.yml
    - run: echo "${{ secrets.PROFILE }}" > ./src/main/resources/profile.yml

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0

    - run: chmod +x ./gradlew
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: 빌드 파일 생성 체크
      run: ls build -la

    - name: AWS 인증하기
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_P }}
        aws-secret-access-key: ${{ secrets.AWS_PR }}
  
    - name: AWS Lightsail에 연결되었는지 확인
      run: aws configure list
  
    - name: 배포 자동화
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.LIGHT_URL }}
        username: ${{env.LIGHTSAIL_USERNAME}}
        key: ${{ secrets.LIGHT_SSH }}
        source: 'build/libs/*'
        strip_components: 1
        target: '/home/ec2-user/buildscost/back'
  
    - name: Restart PM2 process
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.LIGHT_URL }}
        username: ${{env.LIGHTSAIL_USERNAME}}
        key: ${{ secrets.LIGHT_SSH }}
        script: sh /home/ec2-user/buildscost/deploy.sh
    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build
